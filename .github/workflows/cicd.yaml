Continuous-Deployment:
  needs: Continuous-Integration
  runs-on: self-hosted   # your runner is online

  steps:
    - uses: actions/checkout@v4

    - uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - id: login
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build image ref (debug + guard)
      run: |
        set -euo pipefail
        IMAGE="${{ steps.login.outputs.registry }}/${{ secrets.ECR_REPO }}:latest"
        echo "registry = ${{ steps.login.outputs.registry }}"
        echo "ECR_REPO = '${{ secrets.ECR_REPO }}'"
        echo "IMAGE    = '$IMAGE'"
        [[ "$IMAGE" =~ ^[a-z0-9][a-z0-9._/-]*:[a-z0-9._-]+$ ]] || { echo "Bad image ref: $IMAGE"; exit 1; }
        echo "IMAGE=$IMAGE" >> $GITHUB_ENV

    - name: Ensure Docker up
      run: |
        sudo systemctl enable --now docker
        docker version

    - name: Free port & old container
      run: |
        sudo fuser -k 8080/tcp || true
        docker ps -q --filter "name=virtualdoc" | xargs -r docker stop
        docker ps -aq --filter "name=virtualdoc" | xargs -r docker rm

    - name: Pull & run
      run: |
        set -euo pipefail
        docker pull "$IMAGE"
        docker run -d --name virtualdoc --restart unless-stopped \
          -e PINECONE_API_KEY='${{ secrets.PINECONE_API_KEY }}' \
          -e GROQ_API_KEY='${{ secrets.GROQ_API_KEY }}' \
          -p 8080:8080 "$IMAGE"
        curl -sfI http://localhost:8080
